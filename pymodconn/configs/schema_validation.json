{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "required": [
        "if_model_image",
        "if_model_summary",
        "if_seed",
        "seed",
        "model_type_prob",
        "loss_prob",
        "loss",
        "quantiles",
        "metrics",
        "optimizer",
        "Adam",
        "SGD",
        "save_models_dir",
        "batch_size",
        "n_past",
        "n_future",
        "known_past_features",
        "unknown_future_features",
        "known_future_features",
        "control_future_cells",
        "all_layers_neurons",
        "all_layers_dropout",
        "encoder",
        "decoder"
    ],
    "properties": {
        "if_model_image": {
            "type": "integer",
            "minimum": 1,
            "maximum": 1
        },
        "if_model_summary": {
            "type": "integer",
            "minimum": 0,
            "maximum": 0
        },
        "if_seed": {
            "type": "integer",
            "minimum": 0,
            "maximum": 0
        },
        "seed": {
            "type": "integer",
            "minimum": 500,
            "maximum": 500
        },
        "model_type_prob": {
            "type": "string"
        },
        "loss_prob": {
            "type": "string"
        },
        "loss": {
            "type": "string"
        },
        "quantiles": {
            "type": "array",
            "items": {
                "type": "number"
            }
        },
        "metrics": {
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "optimizer": {
            "type": "string"
        },
        "Adam": {
            "type": "object",
            "properties": {
                "lr": {
                    "type": "number"
                },
                "b1": {
                    "type": "number"
                },
                "b2": {
                    "type": "number"
                },
                "epsi": {
                    "type": "number"
                }
            }
        },
        "SGD": {
            "type": "object",
            "properties": {
                "lr": {
                    "type": "number"
                },
                "momentum": {
                    "type": "number"
                }
            }
        },
        "save_models_dir": {
            "type": "string"
        },
        "batch_size": {
            "type": "integer",
            "minimum": 32,
            "maximum": 32
        },
        "n_past": {
            "type": "integer",
            "minimum": 672,
            "maximum": 672
        },
        "n_future": {
            "type": "integer",
            "minimum": 96,
            "maximum": 96
        },
        "known_past_features": {
            "type": "integer",
            "minimum": 31,
            "maximum": 31
        },
        "unknown_future_features": {
            "type": "integer",
            "minimum": 1,
            "maximum": 1
        },
        "known_future_features": {
            "type": "integer",
            "minimum": 15,
            "maximum": 15
        },
        "control_future_cells": {
            "type": "integer",
            "minimum": 1,
            "maximum": 1
        },
        "all_layers_neurons": {
            "type": "integer",
            "minimum": 128,
            "maximum": 128
        },
        "all_layers_dropout": {
            "type": "number",
            "minimum": 0.4,
            "maximum": 0.4
        },
        "encoder": {
            "type": "object",
            "properties": {
                "TCN_encoder_input": {
                    "type": "object",
                    "properties": {
                        "IF_TCN_encoder_input": {
                            "type": "integer"
                        },
                        "kernel_size_encoder_input": {
                            "type": "integer"
                        },
                        "nb_stacks_encoder_input": {
                            "type": "integer"
                        },
                        "dilations_encoder_input": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "RNN_block_encoder_input": {
                    "type": "object",
                    "properties": {
                        "IF_RNN_encoder_input": {
                            "type": "integer"
                        },
                        "IF_NONE_GLUADDNORM_ADDNORM_block_encoder_input": {
                            "type": "integer"
                        },
                        "IF_GRN_block_encoder_input": {
                            "type": "integer"
                        },
                        "rnn_depth_encoder_input": {
                            "type": "integer"
                        },
                        "rnn_type_encoder_input": {
                            "type": "string"
                        },
                        "IF_birectionalRNN_encoder_input": {
                            "type": "integer"
                        },
                        "IF_NONE_GLUADDNORM_ADDNORM_deep_encoder_input": {
                            "type": "integer"
                        }
                    }
                },
                "IF_POS_ENCODE_encoder_input": {
                    "type": "integer"
                },
                "self_MHA_block_encoder": {
                    "type": "object",
                    "properties": {
                        "MHA_depth_encoder": {
                            "type": "integer"
                        },
                        "IF_MHA_encoder": {
                            "type": "integer"
                        },
                        "MHA_head_encoder": {
                            "type": "integer"
                        },
                        "IF_NONE_GLUADDNORM_ADDNORM_deep_encoder": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "decoder": {
            "type": "object",
            "properties": {
                "TCN_decoder_input": {
                    "type": "object",
                    "properties": {
                        "IF_TCN_decoder_input": {
                            "type": "integer"
                        },
                        "kernel_size_decoder_input": {
                            "type": "integer"
                        },
                        "nb_stacks_decoder_input": {
                            "type": "integer"
                        },
                        "dilations_decoder_input": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "RNN_block_decoder_input": {
                    "type": "object",
                    "properties": {
                        "IF_RNN_decoder_input": {
                            "type": "integer"
                        },
                        "IF_NONE_GLUADDNORM_ADDNORM_block_decoder_input": {
                            "type": "integer"
                        },
                        "IF_GRN_block_decoder_input": {
                            "type": "integer"
                        },
                        "rnn_depth_decoder_input": {
                            "type": "integer"
                        },
                        "rnn_type_decoder_input": {
                            "type": "string"
                        },
                        "IF_birectionalRNN_decoder_input": {
                            "type": "integer"
                        },
                        "IF_NONE_GLUADDNORM_ADDNORM_deep_decoder_input": {
                            "type": "integer"
                        }
                    }
                },
                "IF_POS_ENCODE_decoder_input": {
                    "type": "integer"
                },
                "IF_DECODER_MHA": {
                    "type": "integer"
                },
                "MHA_depth_decoder": {
                    "type": "integer"
                },
                "self_MHA_block_decoder": {
                    "type": "object",
                    "properties": {
                        "IF_MHA_decoder": {
                            "type": "integer"
                        },
                        "MHA_head_decoder": {
                            "type": "integer"
                        },
                        "IF_NONE_GLUADDNORM_ADDNORM_deep_decoder": {
                            "type": "integer"
                        }
                    }
                },
                "cross_MHA_block_decoder": {
                    "type": "object",
                    "properties": {
                        "IF_MHA_decoder": {
                            "type": "integer"
                        },
                        "MHA_head_decoder": {
                            "type": "integer"
                        },
                        "IF_NONE_GLUADDNORM_ADDNORM_deep_decoder": {
                            "type": "integer"
                        }
                    }
                },
                "TCN_decoder_output": {
                    "type": "object",
                    "properties": {
                        "IF_TCN_decoder_output": {
                            "type": "integer"
                        },
                        "kernel_size_decoder_output": {
                            "type": "integer"
                        },
                        "nb_stacks_decoder_output": {
                            "type": "integer"
                        },
                        "dilations_decoder_output": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "RNN_block_decoder_output": {
                    "type": "object",
                    "properties": {
                        "IF_RNN_decoder_output": {
                            "type": "integer"
                        },
                        "IF_NONE_GLUADDNORM_ADDNORM_block_decoder_output": {
                            "type": "integer"
                        },
                        "IF_GRN_block_decoder_output": {
                            "type": "integer"
                        },
                        "rnn_depth_decoder_output": {
                            "type": "integer"
                        },
                        "rnn_type_decoder_output": {
                            "type": "string"
                        },
                        "IF_birectionalRNN_decoder_output": {
                            "type": "integer"
                        },
                        "IF_NONE_GLUADDNORM_ADDNORM_deep_decoder_output": {
                            "type": "integer"
                        }
                    }
                },
                "MERGE_STATES_METHOD": {
                    "type": "integer"
                },
                "IFATTENTION": {
                    "type": "integer"
                },
                "attn_type": {
                    "type": "integer"
                }
            }
        }
    }
}